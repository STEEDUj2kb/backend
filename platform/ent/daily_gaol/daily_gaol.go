// Code generated by entc, DO NOT EDIT.

package daily_gaol

import (
	"time"
)

const (
	// Label holds the string label denoting the daily_gaol type in the database.
	Label = "daily_gaol"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldTodo holds the string denoting the todo field in the database.
	FieldTodo = "todo"
	// FieldDone holds the string denoting the done field in the database.
	FieldDone = "done"
	// FieldIsRemoved holds the string denoting the is_removed field in the database.
	FieldIsRemoved = "is_removed"
	// EdgeStudy holds the string denoting the study edge name in mutations.
	EdgeStudy = "study"
	// EdgeWgoal holds the string denoting the wgoal edge name in mutations.
	EdgeWgoal = "wgoal"
	// Table holds the table name of the daily_gaol in the database.
	Table = "daily_gaols"
	// StudyTable is the table that holds the study relation/edge.
	StudyTable = "daily_gaols"
	// StudyInverseTable is the table name for the Study entity.
	// It exists in this package in order to avoid circular dependency with the "study" package.
	StudyInverseTable = "studies"
	// StudyColumn is the table column denoting the study relation/edge.
	StudyColumn = "study_dgoals"
	// WgoalTable is the table that holds the wgoal relation/edge.
	WgoalTable = "daily_gaols"
	// WgoalInverseTable is the table name for the Weekly_Gaol entity.
	// It exists in this package in order to avoid circular dependency with the "weekly_gaol" package.
	WgoalInverseTable = "weekly_gaols"
	// WgoalColumn is the table column denoting the wgoal relation/edge.
	WgoalColumn = "weekly_gaol_dgaols"
)

// Columns holds all SQL columns for daily_gaol fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldTodo,
	FieldDone,
	FieldIsRemoved,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "daily_gaols"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"study_dgoals",
	"weekly_gaol_dgaols",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// TodoValidator is a validator for the "todo" field. It is called by the builders before save.
	TodoValidator func(string) error
	// DefaultDone holds the default value on creation for the "done" field.
	DefaultDone bool
	// DefaultIsRemoved holds the default value on creation for the "is_removed" field.
	DefaultIsRemoved bool
)
